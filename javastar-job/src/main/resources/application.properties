
spring.application.name=javastar-job
#eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
server.port=7812
mybatis.mapperLocations=classpath:com/wangke/javastar/job/mappers/*.xml


#DataSource
spring.datasource.continue-on-error=false
spring.datasource.separator=; # statement separator in SQL initialization scripts
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/protal?zeroDateTimeBehavior=convertToNull&characterEncoding=utf-8&autoReconnect=true
spring.datasource.username=root
spring.datasource.password=850123
spring.datasource.max-active=20
spring.datasource.max-idle=8
spring.datasource.min-idle=2
spring.datasource.initial-size=5
spring.datasource.validation-query=SELECT 1
spring.datasource.test-on-borrow=false
spring.datasource.test-on-return=false
spring.datasource.test-while-idle=true
spring.datasource.time-between-eviction-runs-millis=18800
spring.datasource.min-evictable-idle-time-millis=
spring.datasource.max-wait=10000
spring.datasource.jdbc-interceptors=ConnectionState;SlowQueryReport(threshold=0)
spring.datasource.jmx-enabled=false

#Email (MailProperties)
#spring.mail.host=smtp.exmail.qq.com
#spring.mail.port=25
#spring.mail.username=
#spring.mail.password=
#spring.mail.default-encoding=UTF-8
#spring.mail.properties.*= # properties to set on the JavaMail session



#Matser的ip地址
redis.hostName=localhost
#端口号
redis.port=6379
#如果有密码
redis.password=123456
#客户端超时时间单位是毫秒 默认是2000
redis.timeout=10000
#最大空闲数
redis.maxIdle=300  
#连接池的最大数据库连接数。设为0表示无限制,如果是jedis 2.4以后用redis.maxTotal
#redis.maxActive=600
#控制一个pool可分配多少个jedis实例,用来替换上面的redis.maxActive,如果是jedis 2.4以后用该属性
redis.maxTotal=1000  
#最大建立连接等待时间。如果超过此时间将接到异常。设为-1表示无限制。
redis.maxWaitMillis=1000  
#连接的最小空闲时间 默认1800000毫秒(30分钟)
redis.minEvictableIdleTimeMillis=300000  
#每次释放连接的最大数目,默认3
redis.numTestsPerEvictionRun=1024  
#逐出扫描的时间间隔(毫秒) 如果为负数,则不运行逐出线程, 默认-1
redis.timeBetweenEvictionRunsMillis=30000  
#是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个
redis.testOnBorrow=true  
#在空闲时检查有效性, 默认false
redis.testWhileIdle=true 

